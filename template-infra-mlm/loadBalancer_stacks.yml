AWSTemplateFormatVersion: 2010-09-09
Description: "Docker cluster LoadBalancer"
Parameters:
  NetworkStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Default: network
  
  InstancesStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Default: instances

Resources: 
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: "ipv4"
      Name: "LoadBalancer-mlm"
      Scheme: "internet-facing"
      SecurityGroups: 
          - !ImportValue 
            'Fn::Sub': 'LBSecureGrpID'
      #SubnetMappings: [!Ref ---]
      Subnets: 
          - !ImportValue 
            'Fn::Sub': 'PublicSubnetID'
          - !ImportValue 
            'Fn::Sub': 'PublicSubnetLBID'
      Type: "application"
      Tags:
        -
          Key: "name"
          Value: "LoadBalancer-mlm"

  UCPGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: yes
      HealthCheckIntervalSeconds: 300
      HealthCheckPort: 443
      HealthCheckProtocol: "HTTP"
      Name: "UCPGrp"
      Port: 443
      Protocol: "HTTP"
      VpcId: !ImportValue 
        'Fn::Sub': 'VPCID'
      TargetType: instance 
      Targets: 
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager1ID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager2ID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager3ID'
          Port: 443
      Tags:
        -
          Key: "name"
          Value: "UCPGrp-mlm"

  DTRGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: yes
      HealthCheckIntervalSeconds: 300
      HealthCheckPort: 443
      HealthCheckProtocol: "HTTP"
      Name: "DTRGrp"
      Port: 80
      Protocol: "HTTP"
      VpcId: !ImportValue 
        'Fn::Sub': 'VPCID'
      TargetType: instance 
      Targets: 
        -
          Id: !ImportValue 
            'Fn::Sub': 'WorkerDTRID'
          Port: 443
      Tags:
        -
          Key: "name"
          Value: "DTRGrp-mlm"

  AppGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: yes
      HealthCheckIntervalSeconds: 300
      HealthCheckPort: 8080
      HealthCheckProtocol: "HTTP"
      Name: "AppGrp"
      Port: 8080
      Protocol: "HTTP"
      VpcId: !ImportValue 
        'Fn::Sub': 'VPCID'
      TargetType: instance 
      Targets: 
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager1ID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager2ID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'Manager3ID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'WorkerID'
          Port: 443
        -
          Id: !ImportValue 
            'Fn::Sub': 'WorkerDTRID'
          Port: 443

  ListenerUCP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions:
      - Type: "forward"
        TargetGroupArn: !Ref UCPGrp
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol : "HTTP"

  ListenerDTR:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions:
      - Type: "forward"
        TargetGroupArn: !Ref DTRGrp
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol : "HTTP"

  ListenerAPP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions:
      - Type: "forward"
        TargetGroupArn: !Ref AppGrp
      LoadBalancerArn: !Ref LoadBalancer
      Port: 8080
      Protocol : "HTTP"