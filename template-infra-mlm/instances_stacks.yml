AWSTemplateFormatVersion: 2010-09-09
Description: "Docker cluster with Bastion"
Parameters:
  NetworkStackName:
    Type: String
    MinLength: 1
    MaxLength: 255
    Default: network

Resources: 
  Manager1: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.medium"
        ImageId: "ami-0a313d6098716f372"
        Tags:
          -        
            Key: "Name"
            Value: "Manager1"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'privateSecGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PrivateSubnetID'
    
  Manager2: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.medium"
        ImageId: "ami-0a313d6098716f372"
        Tags:
          -        
            Key: "Name"
            Value: "Manager2"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'privateSecGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PrivateSubnetID'
 
  Manager3: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.medium"
        ImageId: "ami-0a313d6098716f372"
        Tags:
          -        
            Key: "Name"
            Value: "Manager3"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'privateSecGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PrivateSubnetID'

  Worker: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.medium"
        ImageId: "ami-0a313d6098716f372"
        Tags: 
          -
            Key: "Name"
            Value: "worker"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'privateSecGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PrivateSubnetID'

  WorkerDTR: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.medium"
        ImageId: "ami-0a313d6098716f372"
        Tags:
          -        
            Key: "Name"
            Value: "DTR"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'privateSecGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PrivateSubnetID'

  Bastion: 
      Type: AWS::EC2::Instance
      Properties:
        InstanceType : "t2.nano"
        ImageId: "ami-0a313d6098716f372"
        Tags:
          -        
            Key: "Name"
            Value: "Bastion"
        SecurityGroupIds: 
          - !ImportValue 
            'Fn::Sub': 'pubSecurityGroupID'
        KeyName: "devops_key"
        SubnetId: !ImportValue
          'Fn::Sub': 'PublicSubnetID'
Outputs:
  Manager1:
    Description: The subnet ID to use for public web servers
    Value: !Ref Manager1
    Export:
      Name: !Sub 'Manager1ID'

  Manager2:
    Description: The subnet ID to use for public web servers
    Value: !Ref Manager2
    Export:
      Name: !Sub 'Manager2ID'

  Manager3:
    Description: The subnet ID to use for public web servers
    Value: !Ref Manager3
    Export:
      Name: !Sub 'Manager3ID'

  Worker:
    Description: The subnet ID to use for public web servers
    Value: !Ref Worker
    Export:
      Name: !Sub 'WorkerID'

  WorkerDTR:
    Description: The subnet ID to use for public web servers
    Value: !Ref WorkerDTR
    Export:
      Name: !Sub 'WorkerDTRID'

  Bastion:
    Description: The subnet ID to use for public web servers
    Value: !Ref Bastion
    Export:
      Name: !Sub 'BastionID'


